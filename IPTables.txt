Disable firewall and install the following apps to open Well-Known ports.

### 
Enter Privilege Mode

@linux
sudo su


###
Disable Firewall
systemctl stop firewalld


### 
ENABLE/INSTALL APPS

1. SSH = 22
2. TELNET = 23
3. DNS = 53
4. HTTP = 80
5. HTTPS = 443
6. MySQL = 3306
7. FTP = 21
8. TFTP = 69
9. SMTP = 25
10. IMAP = 143, IMAPS = 993, POP3 = 110, POP3S = 995, SUBMISSION = 587
11. LDAP = 389, LDAPSSL = 636


1. SSH

@linux
systemctl start sshd
systemctl enable --now sshd


2. TELNET

@linux
yum install telnet telnet-server -y
systemctl start telnet.socket


3. DNS

@linux
yum install bind -y

Modify named.conf file and change 127.0.0.1 to any for listening port and query
@linux
nano /etc/named.conf
~~~$
options {
        listen-on port 53 { any; };
        listen-on-v6 port 53 { ::1; };
        directory       "/var/named";
        dump-file       "/var/named/data/cache_dump.db";
        statistics-file "/var/named/data/named_stats.txt";
        memstatistics-file "/var/named/data/named_mem_stats.txt";
        secroots-file   "/var/named/data/named.secroots";
        recursing-file  "/var/named/data/named.recursing";
        allow-query     { any; };
~~~$

systemctl start named


4. HTTP

@linux
yum install nginx -y
systemctl start nginx


5. HTTPS

@linux
yum install openssl
mkdir /etc/nginx/ssl
openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx-selfsigned.key -out /etc/nginx/ssl/nginx-selfsigned.crt

  -----
  Country Name (2 letter code) [XX]: PH
  State or Province Name (full name) []: NCR
  Locality Name (eg, city) [Default City]:MKT
  Organization Name (eg, company) [Default Company Ltd]:RIVANCORP
  Organizational Unit Name (eg, section) []:HQ
  Common Name (eg, your name or your server's hostname) []:RIVAN
  Email Address []:


nano /etc/nginx/nginx.conf

~~~$
# Settings for a TLS enabled server.
#
    server {
        listen       443 ssl http2;
        listen       [::]:443 ssl http2;
        server_name  _;
        root         /usr/share/nginx/html;

        ssl_certificate "/etc/nginx/ssl/nginx-selfsigned.crt";
        ssl_certificate_key "/etc/nginx/ssl/nginx-selfsigned.key";
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers PROFILE=SYSTEM;
        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

}
~~~$

systemctl restart nginx
chmod 644 /etc/nginx/ssl/nginx-selfsigned.crt
chmod 600 /etc/nginx/ssl/nginx-selfsigned.key


6. MySQL

@linux
yum install mariadb-server -y
systemctl start mariadb


7. FTP

@linux
yum install vsftpd -y
systemctl start vsftpd


8. TFTP

@linux
sudo yum install -y tftp-server tftp
systemctl start tftp.service
systemctl start tftp.socket


9. SMTP

@linux
yum install postfix -y

Modify the main.cf file of postfix
@linux
nano /etc/postfix/main.cf    
~~~$
inet_interfaces = all
~~~$

systemctl start postfix
 

10. IMAP, IMAPS, POP3, POP3S, SUBMISSION 

@linux
yum install dovecot -y

Modify dovecot.conf file of dovecot
@linux
nano /etc/dovecot/dovecot.conf

~~~$
# Protocols we want to be serving.
protocols = imap pop3 lmtp submission
~~~$

systemctl start dovecot


11. LDAP & LDAPSSL

@linux
yum install openldap openldap-servers openldap-clients -y
systemctl start slapd.service  


12. TACACS

@linux
dnf group install "Development Tools"
yum install tcp_wrappers

cd /etc/yum.repos.d/
nano nux-misc.repo

~~~$
[nux-misc]
name=Nux Misc
baseurl=http://li.nux.ro/download/nux/misc/el6/x86_64/
enabled=0
gpgcheck=1
gpgkey=http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro
~~~$

yum --enablerepo=nux-misc install tac_plus
nano /etc/tac_plus.conf


***
Install Docker

@linux
dnf -y install dnf-plugins-core
dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
dnf install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
systemctl start docker
systemctl enable --now docker




**** Enable Ports
systemctl stop firewalld
systemctl start telnet.socket
systemctl start named
systemctl start nginx
systemctl start mariadb
systemctl start vsftpd
systemctl start postfix
systemctl start dovecot
systemctl start slapd.service  
systemctl start snapd
systemctl start snapd.socket


****
sudo iptables -t nat -A PREROUTING -p tcp --dport 8080 -j DNAT --to-destination 10.10.10.10:80
sudo iptables -A FORWARD -p tcp --dport <destination_port> -d <destination_ip> -j ACCEPT
sudo service iptables save
